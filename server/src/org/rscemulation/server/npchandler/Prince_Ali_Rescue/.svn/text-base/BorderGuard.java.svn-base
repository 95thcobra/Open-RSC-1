/**
* Generated By NPCScript :: A scripting engine created for RSCEmulation by Zilent
*/
package org.rscemulation.server.npchandler.Prince_Ali_Rescue;

import org.rscemulation.server.event.SingleEvent;
import org.rscemulation.server.model.Npc;
import org.rscemulation.server.model.ChatMessage;
import org.rscemulation.server.model.MenuHandler;
import org.rscemulation.server.model.World;
import org.rscemulation.server.event.DelayedQuestChat;
import org.rscemulation.server.model.Player;
import org.rscemulation.server.model.Quest;
import org.rscemulation.server.npchandler.NpcHandler;
public class BorderGuard implements NpcHandler {
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(10);
		if(q != null) {
			if(q.finished()) {
				questFinished(npc, owner);
			} else {
				switch(q.getStage()) {
					case 5:
						questFinished(npc, owner);
				}
			}
		} else {
			questNotStarted(npc, owner);
		}
	}

	private final void questFinished(final Npc npc, final Player owner) {
		final String[] messages0 = {"Can I come through this gate?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages0, true) {
			public void finished() {
				final String[] messages1 = {"You may pass for free, you are a friend of Al Kharid"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages1) {
					public void finished() {
						//Move through gate later
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}

	private final void questNotStarted(final Npc npc, final Player owner) {
		final String[] messages0 = {"You must pay a toll of 10 gold coins to pass"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages0, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options0 = {"No thankyou, I'll walk round", "Who does my money go to?", "yes ok"};
						owner.setBusy(false);
						owner.getActionSender().sendMenu(options0);
						owner.setMenuHandler(new MenuHandler(options0) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										final String[] messages1 = {"Ok suit yourself"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages1) {
											public void finished() {
												owner.setBusy(false);
												npc.unblock();
											}
										});
										break;
									case 1:
										final String[] messages2 = {"The money goes to the city of Al Kharid"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
											public void finished() {
												owner.setBusy(false);
												npc.unblock();
											}
										});
										break;
									case 2:
										owner.getActionSender().sendMessage("You pay the guard");
										final String[] messages3 = {"You may pass"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages3) {
											public void finished() {
												owner.getActionSender().sendMessage("The gate swings open");
												owner.setBusy(false);
												npc.unblock();
											}
										});
										break;
								}
							}
						});
					}
				});
			}
		});
	}
}