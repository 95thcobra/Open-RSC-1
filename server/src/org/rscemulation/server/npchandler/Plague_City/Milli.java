/**
* Generated By NPCScript :: A scripting engine created for RSCEmulation by Zilent
*/
//npc ID 449
package org.rscemulation.server.npchandler.Plague_City;
import org.rscemulation.server.event.DelayedQuestChat;
import org.rscemulation.server.event.SingleEvent;
import org.rscemulation.server.model.Npc;
import org.rscemulation.server.model.Player;
import org.rscemulation.server.model.Quest;
import org.rscemulation.server.model.World;
import org.rscemulation.server.npchandler.NpcHandler;



public class Milli implements NpcHandler 
{

	public void handleNpc(final Npc npc, final Player owner) throws Exception 
	{
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(35);
		if(q != null) 
		{
			if(q.finished())
			{
				finished(npc, owner);
			} 
			else 
			{
				switch(q.getStage())
				{
					default:
						noQuestStarted(npc, owner);
				}
			}
		} 
		else
		{
			noQuestStarted(npc, owner);
		}
	}
	
	private void noQuestStarted(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Hello", "Your parents say you saw what happened to Elena"}, true) 
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Sniff", "Yes I was near the south east corner", "When I saw Elena walking by", "I was about to run to greet her", "When some men jumped out", "Shoved a sack over her head", "and dragged her into a building"}) 
				{
					public void finished()
					{	
						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Which building?"}) 
						{
							public void finished()
							{
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"It was the mossy windowless building", "In that south east corner of west Ardougne"}) 
								{
									public void finished()
									{
										owner.setBusy(false);
										npc.unblock();
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private void finished(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
		{
			public void action()
			{
				owner.sendMessage("Milli is not interested in talking");
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
}