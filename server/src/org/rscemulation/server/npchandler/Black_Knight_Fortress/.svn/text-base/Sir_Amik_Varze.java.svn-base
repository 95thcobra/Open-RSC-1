/**
* Generated By NPCScript :: A scripting engine created for RSCEmulation by Zilent
*/
package org.rscemulation.server.npchandler.Black_Knight_Fortress;

import org.rscemulation.server.event.SingleEvent;
import org.rscemulation.server.model.InvItem;
import org.rscemulation.server.model.Npc;
import org.rscemulation.server.model.ChatMessage;
import org.rscemulation.server.model.MenuHandler;
import org.rscemulation.server.model.Quest;
import org.rscemulation.server.model.World;
import org.rscemulation.server.event.DelayedQuestChat;
import org.rscemulation.server.model.Player;
import org.rscemulation.server.npchandler.NpcHandler;

public class Sir_Amik_Varze implements NpcHandler {
	
	private final void questFinished(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Hello Sir Amik"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello friend"}) {
					public void finished() {
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}
	
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(1);
		if(q != null) {
			if(q.finished()) { //Quest Finished
				questFinished(npc, owner);
			} else { //Quest Underway
				switch(q.getStage()) {
					case 0:
					case 1:
						final String[] messages20 = {"How's the mission going?"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages20, true) {
							public void finished() {
								final String[] messages21 = {"I haven't managed to find out what the secret weapon is yet."};
								World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages21) {
									public void finished() {
										owner.setBusy(false);
										npc.unblock();
									}
								});
							}
						});
						break;
					case 2:
						final String[] messages22 = {"I have ruined the black knight's invincibility potion.", "That should put a stop to your problem."};
						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages22, true) {
							public void finished() {
								final String[] messages23 = {"Yes we have just received a message from the black knights.", "Saying they withdraw their demands.", "Which confirms your story"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages23) {
									public void finished() {
										final String[] messages24 = {"You said you were going to pay me"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages24) {
											public void finished() {
												final String[] messages25 = {"Yes that's right"};
												World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages25) {
													public void finished() {
														owner.finishQuest(1);
														owner.getActionSender().sendCompletedQuest(1);
														owner.getActionSender().sendMessage("Well done. You have completed the Black Knights fortress quest");
														owner.getActionSender().sendMessage("@gre@You just advanced 3 quest point!");
														owner.setBusy(false);
														npc.unblock();
														owner.getActionSender().sendMessage("Sir Amik hands you 2500 coins");
														owner.getInventory().add(new InvItem(10, 2500));
														owner.getActionSender().sendInventory();
													}
												});
											}
										});
									}
								});
							}
						});
						break;
				}
			}
		} else { //Quest Not Started
			final String[] messages12 = {"I am the leader of the white knights of Falador", "Why do you seek my audience?"};
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages12, true) {
				public void finished() {
					World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
						public void action() {
							final String[] options3 = {"I seek a quest", "I don't I'm just looking around"};
							owner.setBusy(false);
							owner.getActionSender().sendMenu(options3);
							owner.setMenuHandler(new MenuHandler(options3) {
								public void handleReply(final int option, final String reply) {
									owner.setBusy(true);
									for(Player informee : owner.getViewArea().getPlayersInView()) {
										informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
									}
									switch(option) {
										case 0:
											seekQuest(npc, owner);
											break;
										case 1:
											final String[] messages13 = {"Ok, don't break anything"};
											World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages13) {
												public void finished() {
													owner.setBusy(false);
													npc.unblock();
												}
											});
											break;
									}
								}
							});
						}
					});
				}
			});		
		}
	}
	
	private void seekQuest(final Npc npc, final Player owner) {
		final String[] messages14 = {"Well I need some spy work doing", "It's quite dangerous", "You will need to go into the Black Knight's fortress"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages14) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options4 = {"I laugh in the face of danger", "I go and cower in a corner at the first sign of danger"};
						owner.setBusy(false);
						owner.getActionSender().sendMenu(options4);
						owner.setMenuHandler(new MenuHandler(options4) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										willHelp(npc, owner);
										break;
									case 1:
										final String[] messages15 = {"Err", "Well", "spy work does involve a little hiding in corners I suppose"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages15) {
											public void finished() {
												World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
													public void action() {
														final String[] options5 = {"Oh I suppose I'll give it a go then", "No I'm not convinced"};
														owner.setBusy(false);
														owner.getActionSender().sendMenu(options5);
														owner.setMenuHandler(new MenuHandler(options5) {
															public void handleReply(final int option, final String reply) {
																owner.setBusy(true);
																for(Player informee : owner.getViewArea().getPlayersInView()) {
																	informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
																}
																switch(option) {
																	case 0:
																		willHelp(npc, owner);
																		break;
																	case 1:
																		owner.setBusy(false);
																		npc.unblock();
																		break;
																}
															}
														});
													}
												});
											}
										});
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void willHelp(final Npc npc, final Player owner) {
		final String[] messages16 = {"Well that's good", "Don't get too overconfident though", "You've come along just right actually", "All of my knights are known to the black knights already", "Subtlety isn't exactly our strong point"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages16) {
			public void finished() {
				final String[] messages17 = {"So what needs doing?"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages17) {
					public void finished() {
						final String[] messages18 = {"Well the black knights have started making strange threats to us", "Demanding large amounts of money and land", "And threatening to invade Falador if we don't pay", "Now normally this wouldn't be a problem", "But they claim to have a powerful new secret weapon", "What I want you to do is get inside their fortress", "Find out what their secret weapon is", "And then sabotage it", "You will be well paid"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages18) {
							public void finished() {
								final String[] messages19 = {"Ok I'll give it a try"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages19) {
									public void finished() {
										owner.getActionSender().sendQuestStarted(1);
										owner.addQuest(1, 3);
										owner.setBusy(false);
										npc.unblock();
									}
								});
							}
						});
					}
				});
			}
		});
	}
}