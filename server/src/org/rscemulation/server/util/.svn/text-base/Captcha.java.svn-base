package org.rscemulation.server.util;

import java.awt.image.BufferedImage;
import java.awt.Font;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.util.Random;
import java.io.File;
import java.util.Date;
import java.lang.reflect.Array;
import java.io.FileInputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;

public class Captcha {
	private static int[] styles = {Font.BOLD, Font.ITALIC, Font.PLAIN};
	private static Date date;
	private static int[] sizes = { 25,26,27,28,29,30,31,32,33,34};
	private static String captchaString;
	private static File dir;
	private static String[] allNames;
	private static ArrayList<String> words = new ArrayList<String>();
	
	static {
		try {
			String line = "";
			BufferedReader br = new BufferedReader(new FileReader("Server Config\\Captcha Words.txt"));
			while((line = br.readLine()) != null) {
				words.add(line);
			}
		} catch(Exception ex) {
			System.out.println("Unable to initialize captcha (Is the dictionary file intact?)");
			System.exit(1);
		}
	}

	public static BufferedImage makeCaptcha() {
		BufferedImage image = new BufferedImage(300, 80, BufferedImage.TYPE_INT_RGB);
		try {
			dir = new File("Server Config\\Fonts\\");
			allNames = dir.list();
			date = new Date();
 			Random r = new Random(date.getTime());
			File fontFile = new File("Server Config\\Fonts\\" + allNames[r.nextInt(Array.getLength(allNames) - 1)]);
			FileInputStream fontStream = new FileInputStream(fontFile);
			String newFont = Font.createFont(Font.TRUETYPE_FONT, fontStream).getFontName();
			Font font=new Font(newFont, styles[r.nextInt(3)] , sizes[r.nextInt(10)]);
			Graphics2D graphics2D = image.createGraphics();
			captchaString = words.get(r.nextInt(words.size() - 1));
			Color c = new Color(r.nextInt(255), r.nextInt(255), r.nextInt(255), r.nextInt(255));
			GradientPaint gp = new GradientPaint(30, 30, c, 15, 25, Color.white, true);
			graphics2D.setPaint(gp);
			graphics2D.setFont(font);
			graphics2D.drawString(captchaString, 75, 53);
			graphics2D.dispose();
		}
		catch(Exception ex) {
			System.out.println("Stack Trace:");
			ex.printStackTrace();
			System.out.println("End of Stack Trace");
		}
		return image;
	}
	public static String getCaptchaString() {
		return captchaString;
	}
}


